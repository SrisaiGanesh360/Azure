310723

 > SDLC (Software Development Life Cycle)
   --------------------------------------
   > Example explaination
     > ABC Bank - They need the s/w to track loan applicaions(requirements)
       > Naresh IT - IT Company
 
 > SDLC Phases:
   ------------
   > There are seven different life cycle phases of SDLC:
     > Requirement gathering/capturing
     > Analysis
     > Designing
     > Coding
     > Testing
     > Development
     > Support/mantainance
 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------

010823

 > SDLC Models:
   ------------
   > Waterfall model
   > Spiral model
   
 > Agile Model:
   ------------
   > Sprint
     > It is a timeframe (generally 2-4 weeks)
     > With in this given time all SDLC phases should be complete
     > Since IT doesn't work on Sat and Sun total days for a 2 week sprint will be over 10 days
   
   > Spint planning
     > Sprint 1 --> July31 - Aug11
     > Sprint 2 --> Aug14 - Aug25
     > Sprint 3 --> Aug28 - Sep8
     
     > Different requirement for this sprint like
       > QA
       > DevOps
     
     > Participants
       > Developers
       > QA
       > DevOps
       > BA
       > Scrum master
       > Product owner

   > Stories
     > User stories: requirement of customer

   > Product Backlogs
     > This is the bucket where we will keep oor userstories and it woild be picked
       up once they needed in the sprint
   
   > Scrum Meeting
     > dsm/scrum/standup meeting
     > What we have done yesterday
     > What to do today
     > Any blocker

   > Retrospective meeting
     > On last day of sprint
       > What went good
       > What went bad
       > Any suggestions

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

020823

 > Product Backlog
   ---------------
   > 200 stories
   > Sprint 1 - 

 > Burn down chart
   ---------------
   > Chart made by cutting down the work through the period of week or so
 
 > Burn up chart
   -------------
   > 

-----------------------------------------------------------------------------------------------------------------------

030823

 > Azure Repo
   ----------
   > Storage of code
   > Developer will be using this space in store their code 

   > Azure devops account: Azure board, azure repo, build pipleline, artifact, release pipleline.
   > Azure cloud account: App services, funcitionapp, sql, vm etc.

   > Azure devops account
     > dev.azure.com
       > Start Free
         > Create project
           > Repo
             > Initialize
               
   > New branch
     > After initialize click on main dropdown
       > create new branch
         > branch based on main
           > content will be taken from main branch

 > Assignment:
   1.  create the account in azure devops
   2.  create the organization and project.
   3.  Create below two repo:
       FE
       BE
   4.  Add 2 branches in each
       FE--->A barnch and B branch
       BE--> X branch and Y brancch

  azuretraininghyd1@gmail.com

----------------------------------------------------------------------------------------------------------------------

040823

 > Pull requirements
   -----------------
   > Getting code from branch to another branch
     > Subbranch to main branch, main branch to subbranch, subbranch to subbranch
     > Example
       > FAcebook login page not working
       > Developer has to debug
       > Developer pull request to get the latest code from main (5000 LOC) to his (developer) branch
       > Developer 5010 LOC 
       > Main branch makes pull request 5010 LOC

 > Azure Board
   -----------
   > Work items
     > Userstories
     > Task
     > EPIC
     > Issue/bug

   > Example
     > Facebook login page
       > Correct Username and Incorret Password
       > Incorret Username and Correct Password
       > Blank Username and correct Password
       > Blank Username and Incorret Password
       > Correct Username and blank Password
       > Blank Username and blank Password
       > Incorret Username and blank Password
       > Incorret Username and incorrect Password
       > Username should be only accepting alphanumeric characters
     
     > NareshIT training EPIC
       > Azure devops
       > AWS devops
       > DataScienc
       > Java

 > Assignment
   > Create 3 branches A,B,C
   > Make some changes to invdividual branches
   > Merge from A to Main
   > Merge from B to Main
   > Merge from C to Main
   > Merge from Main to C
   > Merge from A to C
   > Avoid merge conflict ( using diff content )
   > azuretraininghyd1@gmail.com

--------------------------------------------------------------------------------------------------------------------------------------

070823

 > Azure Board:
   ------------
   > Planning phases
     > Stories ( Not for Azure DevOps)
     > EPIC
       > Similar type of tasks
     > Issues/bug/defect
     > Task

     > Epic
       > Epic generally created by owner
       > Create new Epic
         > Azure Board
           > Epic
             > New Epic
               > Title
               > Unassigned
                 > Will be unassigned by default
                 > Should be assigned to Lead or Scrum master
               > State
                 > To Do
                 > In progress/Doing
                 > DOne
               > Area
               > Description
               > Planning
                 > Priority
                 > Start Date
                 > Target Date
               > History
               > Link
                 > New Task or Existing tasks
                   > Link type 'Child'
                   > Work item in Link
                     > You can choose multiple

               > Attachment

       > Follow
         > To observe assigned Epics

     > Task 
       > Create Task
  
 > Assignment
   ----------
   > Create Epic, Task.
   > Link it properly according to their need
   > Take a SS and send it to azuretraininghyd1@gmail.com
   > BBC Telecast
     > India News
       > Central News
         > Sports News
         
----------------------------------------------------------------------------------------------------

080823

 > Backlogs
   --------
   > Component of board, where we'll keep all the items like stories, tasks, epic
   > Options
     > Move to iteration
       > Move to required sprint

-----------------------------------------------------------------------------------------------------

090823

 > Github
   ------
   > Git is an alternate solution of Azure Repository

   > Git UI
     > github.com
       > Create a new repository

   > Gitbash
     > git -- version // to know github version
     > git init // in this locaiton empty repo has been initialized
     > git status
     > touch program.txt // creating a text file named as program
     > ls // to check list of files
     > vi program.txt // vi is the editor 
       > i // i for ink or insert
         > write program/ story
         > Esc then :wq // to come out of editor
     > cat program.txt // used to display content of a file
     > git commit -m "any commit message" // you have to make it to staging area before commit
     > git add. // to add it to staging area
     > git commit -m "Hello"

 > Assignment
   > Create a new repository
     > Ass one branch
     > See the changes from main is coming to new branch
     > Make some changes to new branch
     > Create pull request
     > Go and explore with git cmd prompt

     > Cmds
       > git --version
       > git init
       > git status
       > tocuh program.txt
       > ls
       > vi program.txt 
         > to enter type 'i'  
         > and to save and quit type esc button then :wq
         
-----------------------------------------------------------------------------------------------------------------

100823

       > git config --global user.name
       > git config --global user.email

       > git branch // to know how many branches and what 
       > git branch ganeshbranch // to create new branch
       > ls // to see list of files
       > git checkout ganeshbranch // to switch branches

 > Clone existing repository
   -------------------------
   > Click on Clone in Azure repo and copy the clone link
   > Create a new local file and open it with GUI
   > give source location i.e., clone link that you copied earlier

 > Assignment
   ----------
   > Complete till crete branch and switch in Git Bash
   > Clone the project from Azure repository to local
   > Add file/files in local 
   > Stage the local , commit, push 
   > verify the local code is pushed to Azure repository

---------------------------------------------------------------------------------------------------------------------

140823

 > Linux commands:
   ---------------
   > pwd (Present Working Directory)
   > Commands
     > pwd // in the required directory
     > mkdir Ganesh // command used to create to make directory i.e., new folder in pwd
     > cd .. // to change directoory from sub folder to main folder i.e., to change directory from inner folder to outer folder
     > ls  // displays content of current pwd 
     > touch aws.txt // to create new file
     > ls // you can see the new file too
     > vi India.txt // to open editor to enter data
       > i // to start entering data
       > esc 
       > :wq 
         > enter // to save data
     > cat India.txt // to read the file
     > clear // to clear the screen

     > cp aws.txt /d/Code/AClass // to copy file from one directory to other required directory
     
     > cd Ganesh // to change directory to another folder
     > mv India.txt /d/Code/AClass/Ganesh // to move one file from a folder to another folder 

---------------------------------------------------------------------------------------------------------------------------------

160823

     > rm // to delete the file from the current location
       > rm aws.txt
       > ls
         > 'New Folder' / Ganesh/....
       > 
     > rmdir // to delete the directory
     > mvdir // to move the directory from one to another location
     > history // to check the history of previously used commands
       > history 10 // last 10 commands
     > free // used to get the free space of the system
     > free -k // used to get the free space of the system in KBs
     > sort India.txt // Items of the file are arranged in alphabatical order
     > grep App India.txt // to find whether Apple is there or not in India.txt
       > Apple // result
     > sudo // used for security purpose in Linex OS
     > echo how are you // to display a message
       > how are you // result
     > id // to get uid gid groups
       > id -u // to get only uid
       > id -g // to get gid only
     > eval // to execute arguments in shell command
     > whoami // to get the user of the system
     > cut -c2-5 India.txt 
       > Mango // how it starts
         12345
         Orange
         123456
       > ango // result 
         pple
         anan
         rang
         uava
         ppli
         

 > Assignment
   > Find commands to get the first 10 history of the commands
   > Find commands to get the content in descending order

-----------------------------------------------------------------------------------------------------------------

170823

> Azure Portal

---------------------------------------------------------------------------------------------------------------

210823
 
 > Linux
   -----
   > Linux is called as Kernel 
   > It is being supported by Ubuntu
   > It is open source ( Free )
   > It is highliy secure
   > Multitasking
   > No need to restart it frequently
   > No frequent updates

 > App Services
   ------------
   > Resource group is to categorize
   > Publish 
     > Code
     > Docker Container
     > Static Web App
   > Runtime stack
     > STS // Short Term Support
     > LTS // Long Term Support
   > Operating system

 > Deployment
   ----------
   > Download publish profile
   > Use XML Formatter // online
     > Copy publish profile code
     > Beautify
     > Copy it back to your clipboard
   > Get winscp // or similar software would work 
     > from publish profile 
       > paste publish url in publisher name
       > Username
       > Password
       > Login
     > Select the code you wanna deploy 

 > After work go to home page in Azure portal 
   > Go to resources and delete unwanted files 

----------------------------------------------------------------------------------------------------------

220823

 > Deployement
   > Using Azure Devops account
   > Deploy code using gitUI
     > Open the code loction in the local storage 
       > Right click on project Git GUI
       > Clone Existing Repository
       > Go to the exisiting repo 
       > Click on clone
         > give it to souce location
       > Target location is your local project location
       > Then copy your new code to that project 
     > Open GIT GUI in the same location
       > click on Rescan
       > Stage 
       > Commit 
         > Give some message
       > Push 
       > All the pushed code will be pushed to Master branch

       > Open this link to increase the parallalism of the project
         > https://forms.office.com/pages/responsepage.aspx?id=v4j5cvGGr0GRqy180BHbR63mUWPlq7NEsFZhkyH8jChUMlM3QzdDMFZOMkVBWU5BWFM3SDI2QlRBSC4u

       > After gettign apporved
         > go to your project
         > Create pipeline
         > Use Classic editor
         > Select a source
           > Azure Repos Git
         > Empty Job
         > Add tasks
           > Copy Files to:
           > Publish Artifact: Drop // Publish build artifact

           > In the Copy Files to:
             > Select source
             > Target Folder
               > Copy the command in the i

           > Publish Artifact: Drop
             > Dont change Display name, Path to publish

         > Go to Pipeline
           > Save and cue

   > 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

230823

 > Service connection
   > Go to project settings
   > Resource Manager 
   > New Service Connection
   > Service connection
     > Subscription ID from Azure Portal
       > select your subscription
         > In Essentials click on subscription ID // copy
     > Subscription name
     > Service Principal 

   > Everytime new Service connection is created  new Active directory is required
   > Azure Active Directory
     > App Registraiotions
       > New App Registration
   
   > Tenant ID // from Azure Active Directory
   > Service Principal Key // from Azure Active Directory Certificates and secrets
   > Service Connection name // any
   > Grant Permission to all pipelines

   > In Azure Portal there need to grant permission
     > Subscription
       > Access control (IAM) // Identity Access Management
         > Grant Access to resource
           > Add role assignment
             > Privilaged member
               > Contributor
                 > Members // App registraion name
                 
   > Now Save // In AzureDevops

 > New Release Pipeline
   > Agent job +
     > Azure App Serice Deploy
       > Azure subscription
         > It is the Service pipeline that was created in azure portal
       > Package or folder
         > Select (build) folder
   > Save 
   > Create release

   > Now the application gives error "You do not have permission to view this directory or page." // browse in Azure portal
     > To fix this 

  > Release Pipeline logs
   > Edit release
   > Pipeline
   > Edit Task
   > Select drop folder in the package

 > CICD
   > Continuous Integratoin Continuous Deployment
   > Go to Edit pipline
     > In Triggers
       > Enable CI
   > GO to release Pipeline // for CD
     > Click on flash symbol

------------------------------------------------------------------------

240823

 > SQL
  > Structured Query Language
 
 > Azure Portal
   > SQL database
     > Create SQL database
       > Create SQL Database server

 > Querry editor
   > login to server

 > Add IP Firewall rules in server settings

----------------------------------------------------------------------------------

250823
 
 > Primary Key
   > Create table [dbo]. [Employee2]
     (EmpIDD varchar(10) primary key,
     Empo)

------------------------------------------------------------------------------------

040923
 
 > 

------------------------------------------------------------------------------

050923

 > Queues: 
   > 

---------------------------------------------------------------------------------------

060923

 > Website creating 
   > App services: Creating frint end application - Developer will add code to it
   > Function applicaion
   > Azure SQL

   > Function app in azure portal search
     > Create Function App
       > Runtime stack the required backend application
       > 

---------------------------------------------------------------------------------------------

070923

 > 

------------------------------------------------------------------------------------------------------

130923

 > 

--------------------------------------------------------------------------

140923

 > Sonar Cloud
   > Is the cloud based code analysis tool designed to detect code quality in differnet languages
   > It will ensure that code would be maintained, should be reliable and security if code

 > Bug
   > If the application is not working according to the customer's requirement

 > Vulnerability
   > A piece of code, where any intruder can attack

 > Code Fixes
   > The change in the code that leads to fixing of the defect

 > Code Smell
   > A maintainability issue that make code confusing and difficult to Manage
   > It is not the issue/bug. Its not technical issue

 > Hotspot review
   > A security hotspot highlights a security sesitive piece of code that developer has to review
   
-----------------------------------------------------------------------------------------

190923

 > 

----------------------------------------------------------------------------------------------------------------

200923
 
 > Virtual Machine
   > Portal.azure
     > Search Virtual Machine
     > Create a virtual machine

--------------------------------------------------------------------------------------------------------

260923
 
 > Kubernetes
   > Go to Protal.Azure.com
     > Search for Kubernetes
       > Kubernetes services
       > Create Kubernetes cluster ( AKS )
         > Select resource group
         > Cluster preset configuration
           > It has deployemnt which come with pay as you go
           > Select production standard
         > Kubernetes cluster name
           > user defined
         > Region
           > user defined
         > Availability zones // generally all zones are checked
         > AKS pricing tier
           // Kubernetes node runs your workload by placing conatianers into pods 
           > In free account 10 nodes 
           > In Standard 5000 nodes
         > Kubernetes versions
           > Default // based on user required
         > Automatic upgrade
           > Enabled with patch
             // Patch is update to required software which can be a times based 
         > Review + Create
         > Region can be an issue which gives error for validation
       
       > After creation we have to connect it
         > Click on Connect to clustervi 
           > Cloud shell
             > 1 Open Cloud Shell
               2 Run the following commands // if you click on Open Cloud shell those two commands will run automatically
             > Create Storage // new popup
               // we can see the commands automatically ran
               > om command type kubectl get nodes // to see nodes
       
       > vi azure-vote.yaml // to deploy front end code
         > i // to type something
           > we're deploying microsoft created voting application
         > Copy paste
         > esc :wq // to exit editor and save
         > cat azure-vote.yaml // to view the edited code
         > kubectl apply -f azure-vote.yaml // copy paste
         > kubectl get service azure-vote-front --watch
         > Copy EXTERNAL-IP
           > paste it in new tab and run it
             > Application will be deployed

---------------------------------------------------------------------------------------------------------------------------------------

270923

 > Kubernetes Scenario 2:
 -------------------------
   > Pre-requisites 
     > Docker file 
       > Azure.devops
         > Import Repo 
           > New repositor with user defined name is created
             > It'll be in master pipe
             > It'll have all the required files
     
     > ACR
       > Portal.azure
         > Container Registry // search
           > Create container registry
             > Registry name // user defined
             > Pricing 
               > Basic
             > Create

     > AKS 
       > Create Kubernetes cluster
         > AKS Pricing
           > Free
         > Review + Create
     
     > Service Connection 
       > Settings of your repo in Azure.devops
         > New Kubernetes service connection
           > Azure Subscription
       > Create build pipeline
         > Build 

--------------------------------------------------------------------------------------------------------------------------------------------

280923

 > A Kubernetes cluster consists of set od worker machines, called nodes, that run containerirzed applications. Every cluster has at least one worker node.
 > The woker node(s) host the Pods  that are the components of the application workload.
 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------

290923

 PowerShell commands
  > Azure Portal
    > Search for Cloud Shell // it is just right to search bar
    > Create Storage
    > Then Switch to Powershell
   
    > Powershell commands
      > Login to account
     > See subscription
      > See resource group, create/delete
      > App services , create/ delete
      > Virutal Machine, create/ delete
      > Storage
      
    > https://github.com/CKNAVIN1009/Azure-PowerShell-CheatSheet
    
      > See Subscription
        > Get-AzSubscription
 
      > See Subscription in a specific tenent
        > Get-AzSubscription -TenantId "xxxx-xxxx-xxxxxxxx"
 
      > Choose subscription
        > Select-AzSubscription –SubscriptionID “SubscriptonID” 
 
      > Retrieving Resource Groups
        > Get-AzResourceGroup
      
      > Get a specific resource group by name
        > Get-AzResourceGroup -Name "myResourceGroup”

      > Create a new Resource Group
        > New-AzResourceGroup -Name 'myResourceGroup' -Location 'westeurope' #Creates a new resource group in West Europe called "myResourceGroup"
          > New-AzResourceGroup -Name 'srisaisg' -Location 'westeurope'

      > Delete a Resource Group
        > Remove-AzResourceGroup -Name "ResourceGroupToDelete"
          > Remove-AzResourceGroup -Name "srisaisg"

      > Create Storage Account
        > New-AzStorageAccount -ResourceGroupName
          “myResourceGroup” -Name “storage1” -Location
          “westeurope”-SkuName “Standard_LRS”

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------